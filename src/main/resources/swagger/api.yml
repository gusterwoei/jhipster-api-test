swagger: "2.0"

info:
    description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
    version: "1.0.0"
    title: "Swagger Petstore"
    termsOfService: "http://swagger.io/terms/"
    contact:
        email: "apiteam@swagger.io"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"

#host: "petstore.swagger.io"

basePath: /v1

tags:
    - name: "pet"
      description: "Everything about your Pets"
      externalDocs:
          description: "Find out more"
          url: "http://swagger.io"
    - name: "store"
      description: "Access to Petstore orders"
    - name: "user"
      description: "Operations about user"
      externalDocs:
          description: "Find out more about our store"
          url: "http://swagger.io"

schemes:
    - http
    - https

paths:
    /leads:
        get:
            summary: Get all leads of an agent
            operationId: getLeads
            tags:
                - "leads"
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                # HEADERS
                - in: header
                  name: X-API-KEY
                  description: the API key
                  type: string

                - in: query
                  name: limit
                  description: number of items in a page
                  type: integer
                - in: query
                  name: page
                  description: page number
                  type: integer
            responses:
                200:
                    description: success
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Lead'

    /leads/{leadId}:
        get:
            summary: Get lead detail
            operationId: getLeadDetail
            tags:
                - "leads"
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - in: path
                  name: leadId
                  type: string
                  required: true
            responses:
                200:
                    description: success
                    schema:
                        $ref: '#/definitions/Lead'
#                400:
#                    description: Bad request
#                401:
#                    description: Unauthorized
#                403:
#                    description: Forbidden
#                500:
#                    description: Internal server error

definitions:
    Lead:
        type: object
        properties:
            id:
                type: string
            name:
                type: string
            createdDate:
                type: string

#    Pet:
#        type: "object"
#        required:
#            - "name"
#            - "photoUrls"
#        properties:
#            id:
#                type: "integer"
#                format: "int64"
#            category:
#                $ref: "#/definitions/Category"
#            name:
#                type: "string"
#                example: "doggie"
#            photoUrls:
#                type: "array"
#                xml:
#                    name: "photoUrl"
#                    wrapped: true
#                items:
#                    type: "string"
#            tags:
#                type: "array"
#                xml:
#                    name: "tag"
#                    wrapped: true
#                items:
#                    $ref: "#/definitions/Tag"
#            status:
#                type: "string"
#                description: "pet status in the store"
#                enum:
#                    - "available"
#                    - "pending"
#                    - "sold"
#        xml:
#            name: "Pet"

#    ApiResponse:
#        type: "object"
#        properties:
#            code:
#                type: "integer"
#                format: "int32"
#            type:
#                type: "string"
#            message:
#                type: "string"

securityDefinitions:
    petstore_auth:
        type: "oauth2"
        authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
        flow: "implicit"
        scopes:
            write:pets: "modify pets in your account"
            read:pets: "read your pets"
    api_key:
        type: "apiKey"
        name: "api_key"
        in: "header"

externalDocs:
    description: "Find out more about Swagger"
    url: "http://swagger.io"
